// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: DeleteFeedFollow.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const deleteFeedFollow = `-- name: DeleteFeedFollow :many
delete from feed_follows
where user_id = $1 and feed_id = $2
RETURNING id, created_at, updated_at, user_id, feed_id
`

type DeleteFeedFollowParams struct {
	UserID uuid.UUID
	FeedID uuid.UUID
}

func (q *Queries) DeleteFeedFollow(ctx context.Context, arg DeleteFeedFollowParams) ([]FeedFollow, error) {
	rows, err := q.db.QueryContext(ctx, deleteFeedFollow, arg.UserID, arg.FeedID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []FeedFollow
	for rows.Next() {
		var i FeedFollow
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.UserID,
			&i.FeedID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
